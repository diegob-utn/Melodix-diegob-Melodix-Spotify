<!DOCTYPE html>
<html lang="es" data-bs-theme="dark">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - Melodix</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" />
    <style>
        :root {
            /* === Base === */
            --bg: #0D1017;
            --panel-bg: #0F131A;
            --ui-bg: #0B0E14;
            --line-color: #11151C;
            --text-color: #BFBDB6;
            --ui-text-color: #565B66;
            --panel-shadow: #00000080;

            /* === Semantic Colors === */
            --accent: #E6B450;
            --error: #D95757;
            --primary: #59C2FF;
            --secondary: #FFB454;
            --success: #7FD962;
            --info: #73B8FF;
            --warning: #E6B673;
            --danger: #F07178;
            --highlight: #409FFF4D;

            /* === Syntax Highlighting === */
            --tag-color: #39BAE6;
            --function-color: var(--secondary);
            --entity-color: var(--primary);
            --string-color: #AAD94C;
            --regexp-color: #95E6CB;
            --markup-color: var(--danger);
            --keyword-color: #FF8F40;
            --special-color: var(--warning);
            --comment-color: #ACB6BF8C;
            --constant-color: #D2A6FF;
            --operator-color: #F29668;

            /* === Version Control (VCS) === */
            --vcs-added: var(--success);
            --vcs-modified: var(--info);
            --vcs-removed: #F26D78;

            /* === Editor UI === */
            --line-highlight: #131721;
            --selection-active: #409FFF4D;
            --selection-inactive: #409FFF21;
            --find-active: #6C5980;
            --find-inactive: #6C598066;
            --gutter-active: #6C7380E6;
            --gutter-normal: #6C738099;
            --indent-active: #6C738080;
            --indent-normal: #6C738033;

            /* === UI Selection States === */
            --ui-selection-active: #47526640;
            --ui-selection-normal: #47526633;
        }

        body {
            background-color: var(--bg);
            color: var(--text-color);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .sidebar {
            width: 250px;
            height: 100vh;
            background-color: var(--panel-bg);
            border-right: 1px solid var(--line-color);
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
            overflow-y: auto;
        }

        .main-content {
            margin-left: 250px;
            padding-bottom: 100px;
            min-height: 100vh;
        }

        .player-bar {
            background-color: var(--ui-bg);
            border-top: 1px solid var(--line-color);
            color: var(--text-color);
            height: 90px;
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 1001;
        }

        .nav-link {
            color: var(--ui-text-color);
            padding: 12px 20px;
            border-radius: 8px;
            margin: 2px 0;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
        }

        .nav-link i {
            margin-right: 12px;
            width: 20px;
        }

        .nav-link:hover {
            color: var(--text-color);
            background-color: var(--ui-selection-normal);
        }

        .nav-link.active {
            color: var(--text-color);
            background-color: var(--ui-selection-active);
        }

        .btn-primary {
            background-color: var(--accent);
            border-color: var(--accent);
            color: var(--bg);
        }

        .btn-primary:hover {
            background-color: var(--secondary);
            border-color: var(--secondary);
        }

        .btn-outline-primary {
            color: var(--primary);
            border-color: var(--primary);
        }

        .btn-outline-primary:hover {
            background-color: var(--primary);
            border-color: var(--primary);
            color: var(--bg);
        }

        .card {
            background-color: var(--panel-bg);
            border: 1px solid var(--line-color);
            border-radius: 12px;
        }

        .card-header {
            background-color: transparent;
            border-bottom: 1px solid var(--line-color);
        }

        .form-control {
            background-color: var(--ui-bg);
            border: 1px solid var(--line-color);
            color: var(--text-color);
        }

        .form-control:focus {
            background-color: var(--ui-bg);
            border-color: var(--primary);
            color: var(--text-color);
            box-shadow: 0 0 0 0.2rem var(--highlight);
        }

        .table-dark {
            background-color: var(--panel-bg);
            color: var(--text-color);
        }

        .table-dark th {
            border-color: var(--line-color);
            background-color: var(--ui-bg);
        }

        .table-dark td {
            border-color: var(--line-color);
        }

        .alert-success {
            background-color: var(--success);
            border-color: var(--success);
            color: var(--bg);
        }

        .alert-danger {
            background-color: var(--error);
            border-color: var(--error);
            color: var(--text-color);
        }

        .alert-warning {
            background-color: var(--warning);
            border-color: var(--warning);
            color: var(--bg);
        }

        .text-muted {
            color: var(--ui-text-color) !important;
        }

        .border {
            border-color: var(--line-color) !important;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: var(--ui-bg);
        }

        ::-webkit-scrollbar-thumb {
            background: var(--ui-text-color);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--text-color);
        }

        /* Logo */
        .logo {
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--accent);
            text-decoration: none;
            margin-bottom: 30px;
            display: block;
            text-align: center;
        }

        .logo:hover {
            color: var(--secondary);
        }
    </style>
</head>

<body>
    <!-- Mobile menu button -->
    <button class="btn mobile-menu-btn d-md-none" type="button" onclick="toggleSidebar()">
        <i class="bi bi-list"></i>
    </button>

    <div class="d-flex">
        <!-- Sidebar -->
        <nav class="sidebar" id="sidebar">
            <div class="p-3">
                <a href="@Url.Action("Index", "Inicio")" class="logo">
                    <i class="bi bi-music-note-beamed"></i> Melodix
                </a>

                <div class="nav flex-column">
                    <a class="nav-link" href="@Url.Action("Index", "Inicio")">
                        <i class="bi bi-house"></i> Inicio
                    </a>
                    <a class="nav-link" href="@Url.Action("Index", "Busqueda")">
                        <i class="bi bi-search"></i> Buscar
                    </a>
                    <a class="nav-link" href="@Url.Action("Index", "Biblioteca")">
                        <i class="bi bi-collection"></i> Tu Biblioteca
                    </a>

                    <hr class="my-3" style="border-color: var(--line-color);">

                    <a class="nav-link" href="@Url.Action("CrearLista", "Playlist")">
                        <i class="bi bi-plus-square"></i> Crear Playlist
                    </a>
                    <a class="nav-link" href="@Url.Action("Index", "Perfil")">
                        <i class="bi bi-person"></i> Tu Perfil
                    </a>

                    @if (User.IsInRole("Musico"))
                    {
                        <hr class="my-3" style="border-color: var(--line-color);">
                        <a class="nav-link" href="@Url.Action("Dashboard", "Artista")">
                            <i class="bi bi-music-note"></i> Mi Música
                        </a>
                    }

                    @if (User.IsInRole("Admin"))
                    {
                        <hr class="my-3" style="border-color: var(--line-color);">
                        <a class="nav-link" href="@Url.Action("Dashboard", "Admin")">
                            <i class="bi bi-gear"></i> Administración
                        </a>
                    }

                    <hr class="my-3" style="border-color: var(--line-color);">

                    <a class="nav-link" href="@Url.Action("MiPlan", "Suscripcion")">
                        <i class="bi bi-star"></i> Mi Plan
                    </a>
                    <a class="nav-link" href="@Url.Action("Logout", "Cuenta")">
                        <i class="bi bi-box-arrow-right"></i> Cerrar sesión
                    </a>
                </div>
            </div>
        </nav>

        <!-- Main content -->
        <main class="main-content">
            <div class="container-fluid p-4">
                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["Success"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        @TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @if (TempData["Warning"] != null)
                {
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        @TempData["Warning"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                @RenderBody()
            </div>
        </main>
    </div>

    <!-- Player Bar (Fixed Bottom) -->
    <footer class="player-bar d-flex justify-content-between align-items-center px-4">
        <div class="d-flex align-items-center" style="flex: 1;">
            <img src="/images/placeholder-album.jpg" alt="Album"
                style="width: 56px; height: 56px; border-radius: 8px; margin-right: 16px;">
            <div>
                <div id="current-track-title" style="font-weight: bold; font-size: 14px;">
                    Selecciona una canción
                </div>
                <div id="current-track-artist" style="color: var(--ui-text-color); font-size: 12px;">
                    Artista
                </div>
            </div>
        </div>

        <div class="d-flex flex-column align-items-center" style="flex: 2;">
            <div class="d-flex align-items-center mb-2">
                <button class="btn btn-outline-light btn-sm mx-1" id="prev-btn">
                    <i class="bi bi-skip-start"></i>
                </button>
                <button class="btn btn-primary btn-sm mx-2" id="play-pause-btn">
                    <i class="bi bi-play-fill"></i>
                </button>
                <button class="btn btn-outline-light btn-sm mx-1" id="next-btn">
                    <i class="bi bi-skip-end"></i>
                </button>
            </div>
            <div class="d-flex align-items-center w-100" style="max-width: 500px;">
                <span id="current-time" style="font-size: 12px; margin-right: 8px;">0:00</span>
                <input type="range" class="form-range" min="0" max="100" value="0" id="progress-bar" style="flex: 1;">
                <span id="total-time" style="font-size: 12px; margin-left: 8px;">0:00</span>
            </div>
        </div>

        <div class="d-flex align-items-center justify-content-end" style="flex: 1;">
            <button class="btn btn-outline-light btn-sm mx-1" id="volume-btn">
                <i class="bi bi-volume-up"></i>
            </button>
            <input type="range" class="form-range" min="0" max="100" value="50" id="volume-bar"
                style="width: 100px; margin-left: 8px;">
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('show');
        }

        // Close sidebar when clicking outside on mobile
        document.addEventListener('click', function (event) {
            const sidebar = document.getElementById('sidebar');
            const menuBtn = document.querySelector('.mobile-menu-btn');

            if (window.innerWidth <= 768 &&
                !sidebar.contains(event.target) &&
                !menuBtn.contains(event.target) &&
                sidebar.classList.contains('show')) {
                sidebar.classList.remove('show');
            }
        });

        // Basic player functionality
        let isPlaying = false;
        const playPauseBtn = document.getElementById('play-pause-btn');
        const playPauseIcon = playPauseBtn.querySelector('i');

        playPauseBtn.addEventListener('click', function () {
            isPlaying = !isPlaying;
            if (isPlaying) {
                playPauseIcon.className = 'bi bi-pause-fill';
            } else {
                playPauseIcon.className = 'bi bi-play-fill';
            }
        });

        // Volume control
        const volumeBtn = document.getElementById('volume-btn');
        const volumeBar = document.getElementById('volume-bar');
        const volumeIcon = volumeBtn.querySelector('i');

        volumeBar.addEventListener('input', function () {
            const volume = this.value;
            if (volume == 0) {
                volumeIcon.className = 'bi bi-volume-mute';
            } else if (volume < 50) {
                volumeIcon.className = 'bi bi-volume-down';
            } else {
                volumeIcon.className = 'bi bi-volume-up';
            }
        });

        volumeBtn.addEventListener('click', function () {
            if (volumeBar.value > 0) {
                volumeBar.dataset.previousValue = volumeBar.value;
                volumeBar.value = 0;
                volumeIcon.className = 'bi bi-volume-mute';
            } else {
                volumeBar.value = volumeBar.dataset.previousValue || 50;
                volumeIcon.className = 'bi bi-volume-up';
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>


           
               
